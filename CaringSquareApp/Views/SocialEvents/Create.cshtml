@model CaringSquareApp.Models.SocialEvent

@{
    ViewBag.Title = "Create Social Event";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Microsoft.AspNet.Identity
<style>
    table, td, th {
        border: 1px solid black;
        padding: 3px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th {
        height: 50px;
    }
</style>
<br />
<br />
<br />
<br />

<div class="container">
    <h2 id="freshtitle">@ViewBag.Title</h2>


    <div class="row">
        <div class="col-lg-12 pt-6 pt-lg-0 order-0 order-lg-0 d-flex align-items-center">
            @using (Html.BeginForm("Create","SocialEvents" , "" , FormMethod.Post, new { @class="col-10" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal" style="font-weight: bold;">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-12 required" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", placeholder = "eg. Yoga at Park, Visit to Museum" } })
                            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row" style="padding:0px 15px">
                            <div class="col-md-7">
                                <div style="display: flex;flex-wrap: wrap;align-items: center;">
                                    <label class="control-label required" for="EventDate" style="padding:0px">Event Date</label>
                                    <a href="#" id="weather-forcast-button" style="color:#010483;font-weight:bold;text-decoration: underline;margin-left: 8px">Click here for Weather forecast</a>
                                </div>
                                @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control", id = "datepicker1" } })
                                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label col-md-12 required", style = "padding:0px" })
                                @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control", id = "timepicker1" } })
                                @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>



                    <div class="form-group" hidden>
                        @Html.LabelFor(model => model.UserUserId, "UserUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" data-val- id="UserUserId" name="UserUserId" type="text" value=@User.Identity.GetUserId()>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.POIPlaceId, "Place Name", htmlAttributes: new { @class = "control-label col-md-12 required" })
                        <div class="col-md-12">
                            @Html.DropDownList("POIPlaceId", null, htmlAttributes: new { @class = "form-control", @id = "place-drop-down" })
                            @Html.ValidationMessageFor(model => model.POIPlaceId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input style="background-color:#94d16a;font-weight:bold;color:#000000" type="submit" id="buttonedit" class="btn btn-default" value="Create" />
                            <br /><br />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div>
        <a href="/POIs" class="btn btn-default" style="color:#010483;background-color: #f7f7f7;border-color:#000000; margin-left:10px;margin-right:10px;font-weight:bold;">Explore Places</a>
        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn", @style = "color:#010483;background-color: #f7f7f7; border-color:#000000;font-weight:bold;" })

    </div>
    <hr />
    <div class="section-title aos-init aos-animate" style="margin-bottom:-40px;" data-aos="fade-up">
        <p>Weather Forecast</p>
        <h2>Click on a date to view detailed weather</h2>
    </div>
    <section id="pricing" class="pricing">
        <div class="container" style="margin-top:-90px;">
            <div id="date-data"></div>
            <div class="row aos-init aos-animate" data-aos="fade-left" id="weather-data">
            </div>
        </div>
    </section>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
<script>
    window.onload = function () {
        function weather_to_icon(weather_id) {
            var icon_text = "";
            if (parseInt(weather_id / 100) == 8) {
                if (weather_id == 801) {
                    icon_text = "fas fa-sun";
                }
                else if (weather_id == 800) {
                    icon_text = "fas fa-sun";
                }
                else {
                    icon_text = "fas fa-cloud";
                }
            }
            else if (parseInt(weather_id / 100) == 7) {
                if (response.weather[0].id == 781) {
                    icon_text = "ri-tornado-line";
                }
                else {
                    icon_text = "ri-haze-2-fill";
                }
            }
            else if (parseInt(weather_id / 100) == 6) {
                if (response.weather[0].id < 615) {
                    icon_text = "ri-snowy-fill";
                }
                else {
                    icon_text = "fas fa-poo-storm";
                }
            }
            else if (parseInt(weather_id / 100) == 5) {
                icon_text = "fas fa-cloud-showers-heavy";
            }
            else if (parseInt(weather_id / 100) == 3) {
                icon_text = "fas fa-cloud-showers-heavy";
            }
            else if (parseInt(weather_id / 100) == 2) {
                icon_text = "ri-thunderstorms-fill";
            }
            return icon_text;
        }
        function get_weather() {
            $.get("https://api.openweathermap.org/data/2.5/forecast?q=Melbourne,AU&appid=45b1b01ef280889b43b44defbb0933ad&units=metric", function (response) {

                var data = response.list;

                var dates = Array.from(new Set(data.map(item => item.dt_txt.slice(0, 10))));

                var dateStr = '';
                for (var i = 0; i < dates.length; i++) {

                    dateStr += `
 <button class="btn btn-primary date-btn col-lg-2" style="margin-right:20px;margin-bottom:30px;background-color:#94d16a;font-weight:bold;color:#000000"  data-filter-date="${dates[i]}" > ${dates[i]}</button>
`
                }

                $('#date-data').html(dateStr)

                var str = '';

                for (var i = 0; i < data.length; i++) {
                    var obj = data[i];
                    var icon = weather_to_icon(obj.weather[0].id);
                    var date = new Date(obj.dt_txt);
                    var dataString = obj.dt_txt.slice(0, 10)

                    if (date.getHours() < 6 || date.getHours() > 18) {
                        continue;
                    }

                    str += `                <div class="col-lg-2 col-md-6 col-sm-6 col-6 d-none" style="margin-right:30px;" data-date="${dataString}" >
                        <div class="box aos-init aos-animate" data-aos="zoom-in" data-aos-delay="100">
                            <i id="icon-weather" class="${icon}" style="font-size:100px"></i>
                            <h3 style="background-color:white">
                                <span id="weather-temp" style="font-size:33px"></span><br>
                                <br>
                                Temperature<br>
                                <span id="weather-temp-like">${obj.main.temp}<sup>o</sup>C</span><br>
                                <span>Time ${date.getHours()}:00 </span>
                            </h3>
                        </div>
                    </div>`
                }

                $('#weather-data').html(str)

            });
        }

        get_weather();

        $(document).on('click', '.date-btn', event => {
            var date = $(event.target).data().filterDate;
            $('#weather-data').children().addClass('d-none');
            $('#weather-data').children().filter(`[data-date=${date}]`).removeClass('d-none');
        })

        var place = new URL(location.href).searchParams.get('place');

        if (typeof place === 'string') {
            document.getElementById('place-drop-down').value = place;
        }

        var date = new Date();
        var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        var end = new Date(date.getFullYear(), date.getMonth(), date.getDate());

        $('#datepicker1').datepicker({
            format: "mm/dd/yyyy",
            todayHighlight: true,
            startDate: today,
            endDate: end,
            defaultDate: new Date(),
            minDate: 0,
            autoclose: true
        });



        $('#datepicker1').datepicker('setDate', today);

        $('#timepicker1').timepicker({
            timeFormat: "h:i  A",
            step: 60,

            minTime: '6',
            maxTime: '11:00pm',
            'forceRoundTime': false

        });


        $('#weather-forcast-button').on('click', event => {
            var target = $('#date-data').find('button').first()

            target.focus();
            $('html, body').animate( { scrollTop: target.offset().top }, 500 );
        })


    }
</script>



